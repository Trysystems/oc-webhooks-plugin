(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
'use strict';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

+function ($) {
    "use strict";

    var UrlColumn = function () {

        /**
         * Constructor
         *
         * @param  {Object} $el
         * @return {void}
         */

        function UrlColumn($el) {
            _classCallCheck(this, UrlColumn);

            this.lang = $el.closest('.bedard-webhooks.list').data('lang');
            $el.on('click', this.onClicked.bind(this));
        }

        /**
         * Url column click handler
         *
         * @param  {Object} e
         * @return {void}
         */


        _createClass(UrlColumn, [{
            key: 'onClicked',
            value: function onClicked(e) {
                e.preventDefault();
                e.stopPropagation();

                var url = $(e.currentTarget).closest('tr').find('a[data-url]').data('url');
                this.copyToClipboard(url);
                this.flashSuccessMessage();
            }

            /**
             * Copy the webhook URL to the user's clipboard
             *
             * @param  {String} url
             * @return {void}
             */

        }, {
            key: 'copyToClipboard',
            value: function copyToClipboard(url) {
                var $input = $("<input>");
                $("body").append($input);
                $input.val(url).select();
                document.execCommand("copy");
                $input.remove();
            }

            /**
             * Tell the user we've copied the webhook
             *
             * @return {void}
             */

        }, {
            key: 'flashSuccessMessage',
            value: function flashSuccessMessage() {
                $.oc.flashMsg({
                    'text': this.lang.hooks.copied_to_clipboard,
                    'class': 'success',
                    'interval': 3
                });
            }
        }]);

        return UrlColumn;
    }();

    ;

    //
    // Bind to widget container
    //
    $.fn.UrlColumn = function () {
        return new UrlColumn(this);
    };

    $(document).on('render', function () {
        return $('td.url-column').UrlColumn();
    });
}(window.jQuery);

},{}],2:[function(require,module,exports){
'use strict';

//
// Components
//
require('./components/url_column');

},{"./components/url_column":1}]},{},[2])


//# sourceMappingURL=webhooks.min.js.map
